class Solution {
public:
	void recurse(vector<vector<char>> &grid, int i, int j) {
		if (grid[i][j] == '1') {
			grid[i][j] = 'X';
			if (i + 1 < grid.size())
				recurse(grid, i + 1, j);
			if (j + 1 < grid[0].size())
				recurse(grid, i, j + 1);
			if (i - 1 >= 0)
				recurse(grid, i - 1, j);
			if (j - 1 >= 0)
				recurse(grid, i, j - 1);
		}
	}
	int numIslands(vector<vector<char>>& grid) {
		int count=0;
		for (int i = 0; i < grid.size(); i++) {
			for (int j = 0; j < grid[0].size(); j++) {
				if (grid[i][j] == '1')
				{
				    ++count;
					recurse(grid, i, j);
				}
				
			}
		}
		return count;
	}
};
