/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        ListNode *p1, *p2, *prev;
        	int j;p1 = p2 = prev = head;
            
                
			if (head == NULL) {
				return NULL;
			}

			if (k == 0||head->next==NULL) {
				return head;
			}
			
            for (j = 0; prev != NULL; j++) {
				prev = prev->next;
			}
			
			if (k == j) {
				return head;
			}
		
			if (k>j) {
				k = k%j;
				if (k == 0)
				    return head;
			}
			prev = head;
            
			for (int i = 1; i <= k; i++) {
				p2 = p2->next;
			}
			
			while (p2->next != NULL) {

				p2 = p2->next;
				prev = p1;
				p1 = p1->next;
			}
			prev = p1;
			p1 = p1->next;

			prev->next = NULL;
			p2->next = head;
			return p1;

    }
};
