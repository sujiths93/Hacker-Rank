/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
    ListNode* temp=l1;
    if(l2==NULL)return l2;
    if(l1==NULL)return l1;
    int carry=0;
    
    int c1,c2=0;
    ListNode* l1last;
    while(l1!=NULL && l2!=NULL){
        l1->val+=l2->val+carry;
        carry=l1->val/10;
        l1->val%=10;
        l1last=l1;
        l1=l1->next;
        l2=l2->next;
        
    }
    if(l1==NULL && l2!=NULL){
        l1last->next=l2;
        ListNode* l2last;
        
        while(l2){
            l2->val+=carry;
            carry=l2->val/10;
            l2->val%=10;
            l2last=l2;
            l2=l2->next;
        }
        
    
    if(carry) l2last->next=new ListNode(carry);
    }
    else if(l2==NULL && l1!=NULL){
        while(l1){
        l1->val+=carry;
        carry=l1->val/10;
        l1->val%=10;
        l1last=l1;
        l1=l1->next;
        
        }
        if(carry) l1last->next=new ListNode(carry);
    }
    else if((l1==NULL)&&(l2==NULL)){
        
        if(carry){
            l1last->next=new ListNode(carry);
            
        }
        
    }
    return temp;
    }
};